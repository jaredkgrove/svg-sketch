{"version":3,"sources":["containers/HeaderContainer.jsx","actions/fetchSketches.js","actions/clearCurrentSketch.js","components/SketchesList.jsx","components/NewSketchInput.jsx","actions/createSketch.js","views/HomeView.jsx","actions/fetchSketch.js","actions/updateSketch.js","components/Circle.jsx","components/Line.jsx","components/Rectangle.jsx","components/Polyline.jsx","containers/ElementsContainer.jsx","containers/SketchContainer.jsx","components/HueSelector.jsx","components/SaturationLightnessSelector.jsx","components/ColorIndicator.jsx","containers/ColorSelectorContainer.jsx","components/lineWidthSelector.jsx","components/lineTypeSelector.jsx","containers/StrokeSelectorContainer.jsx","views/EditView.jsx","containers/SketchPreviewContainer.jsx","views/SketchView.jsx","actions/deleteSketch.js","App.js","reducers/sketchesReducer.js","reducers/currentSketchReducer.js","reducers/sketchSettingsReducer.js","index.js"],"names":["HeaderContainer","children","className","style","marginRight","to","fetchSketches","dispatch","fetch","then","resp","ok","Error","statusText","json","sketches","type","payload","map","sketch","id","name","url","lastUpdated","catch","error","console","log","clearCurrentSketch","data","elements","SketchesList","key","connect","createSketch","headers","method","body","JSON","stringify","e","attributes","elementable_type","properties","elementable","props","useState","setName","onSubmit","event","preventDefault","value","onChange","target","placeholder","HomeView","this","length","currentSketch","history","push","sort","a","b","localeCompare","React","Component","state","fetchSketch","created","Circle","cx","cy","r","stroke","fill","strokeWidth","stroke_width","Line","x1","y1","x2","y2","Rectangle","x","y","width","height","Polyline","points","ElementsContainer","elem","SketchContainer","handleOnMouseDown","sketchClientRect","sketchArea","current","getBoundingClientRect","clientX","left","clientY","top","setState","isDrawing","startPoint","handleOnMouseMove","ratio","ratioX","ratioY","settings","lineType","drawCircle","drawLine","drawRectangle","drawPolyline","handleOnMouseUp","tempElements","R","Math","pow","getHSL","lineColor","fillColor","lineWidth","min","abs","handleSubmit","handleSave","h","s","l","createRef","prevProps","ref","viewBox","onMouseDown","onMouseUp","onMouseMove","onClick","HueSelector","updateDimensions","hueBarClientRect","hueBar","sliderPosition","getSliderPosition","hue","getHue","pos","window","addEventListener","initHue","removeEventListener","prevState","handleChange","background","backgroundColor","paddingTop","borderRadius","border","position","display","right","SaturationLightnessSelector","canvasClientRect","canvas","selectorPosition","saturation","getSaturation","lightness","getLightness","getSelectorPosition","fillCanvas","context","getContext","brightness","createLinearGradient","addColorStop","initColor","fillStyle","fillRect","globalCompositeOperation","hsvSatToHslSat","getHSVSat","getHSVValue","hsvVToHslL","sat","val","hslSatToHsvSat","light","hslLtoHsvV","verticalAlign","ColorIndicator","color","updateLineColorSetting","updateFillColorSetting","handleLineColorChange","handleFillColorChange","LIneWidthSlector","handleClick","handleUpdate","isCurrentSetting","margin","LineTypeSelector","backgroundSize","updateLineWidthSetting","updateLineTypeSetting","EditView","handleUpdateSketch","updateSketch","match","params","sketchID","loading","saving","SketchPreviewContainer","SketchView","deleteSketch","App","exact","path","render","routerProps","sketchReducer","action","deleteIndex","findIndex","slice","index","currentSketchReducer","sketchSettingsReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","sketchesReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.00d29a2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst HeaderContainer = ({children}) => {\r\n    return(\r\n        <header className=\"App-header\">\r\n            <NavLink className='App-link' style={{ marginRight: '10px' }} to=\"/\">Home</NavLink>\r\n            {children}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer","export function fetchSketches(){\r\n    return (dispatch) => {\r\n        fetch(`/api/v1/sketches`)\r\n        .then((resp) => {\r\n            if(!resp.ok){throw Error(resp.statusText);}\r\n            return resp.json()\r\n        })\r\n        .then((sketches) => {\r\n            dispatch({type: 'FETCH_SKETCHES', \r\n            payload: sketches['data'].map(sketch => ({id: sketch['id'], name: sketch['attributes']['name'], url: sketch['links']['sketch_url'], lastUpdated: sketch['attributes']['last_updated']}))\r\n            })})\r\n        .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\n","export const clearCurrentSketch = (id, data) => {\r\n\r\n    return (dispatch) => {\r\n            dispatch(\r\n            {\r\n                type: 'CLEAR_CURRENT_SKETCH', \r\n                payload: {\r\n                    id: '', \r\n                    name: '', \r\n                    elements: []\r\n                }\r\n            })\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n \r\nconst SketchesList = ({ sketches }) => {\r\n  \r\n  const renderSketches = () => sketches.map(sketch => (<><Link key={sketch.id} to={sketch.url}>{sketch.name}</Link> <br/></>));\r\n \r\n  return (\r\n      <>\r\n        {renderSketches()}\r\n      </>\r\n  );\r\n};\r\nexport default SketchesList\r\n","import React, { useState } from 'react';\r\nimport {createSketch} from '../actions/createSketch'\r\nimport { connect } from 'react-redux';\r\n\r\nconst NewSketchInput = (props) => {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        props.createSketch({name: name})\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setName( event.target.value )\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"name\" value={name} onChange={handleChange} placeholder=\"New Sketch Name\"/>\r\n            <input type=\"submit\" value='CREATE' />\r\n        </form> \r\n    ) \r\n};\r\n\r\nexport default connect(null, { createSketch })(NewSketchInput)","export const createSketch = (data) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch({ type: 'SAVING_SKETCH' });\r\n        fetch(`/api/v1/sketches`,{\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((resp) => {\r\n            if(!resp.ok){throw Error(resp.statusText);}\r\n            return resp.json()\r\n        })\r\n        .then((sketch) => { \r\n            dispatch(\r\n            {\r\n                type: 'CREATE_SKETCH', \r\n                payload: {\r\n                    id: sketch['data']['id'], \r\n                    name: sketch['data']['attributes']['name'], \r\n                    elements: sketch['included'].map((e) => ({type: e.attributes.elementable_type, properties: e.attributes.elementable}))\r\n                }\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {fetchSketches} from '../actions/fetchSketches'\r\nimport {clearCurrentSketch} from '../actions/clearCurrentSketch'\r\n\r\nimport { connect } from 'react-redux';\r\nimport SketchesList from '../components/SketchesList'\r\nimport NewSketchInput from '../components/NewSketchInput';\r\n\r\nimport '../styles/home.css'\r\n\r\nclass HomeView extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.clearCurrentSketch()\r\n        if(!this.props.sketches.length){\r\n            this.props.fetchSketches()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.props.currentSketch.id) {\r\n            this.props.history.push(`/sketches/${this.props.currentSketch.id}/edit`)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='home'>\r\n            \r\n                <NewSketchInput />\r\n                <div className='recently-created'>\r\n                    <h1>Recently Created</h1>\r\n                    <SketchesList sketches={this.props.sketches} />\r\n                </div>\r\n                <div className='recently-updated'>\r\n                    <h1>Recently Updated</h1>\r\n                    <SketchesList sketches={[...this.props.sketches].sort((a, b) => b.lastUpdated.localeCompare(a.lastUpdated))}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        sketches: state.sketches,\r\n        currentSketch: state.currentSketch\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, { fetchSketches, clearCurrentSketch })(HomeView)\r\n\r\n","export function fetchSketch(id){\r\n    return (dispatch) => {\r\n        dispatch({ type: 'LOADING_SKETCH' });\r\n        fetch(`/api/v1/sketches/${id}`)\r\n        .then((resp) => {\r\n            if(!resp.ok){throw Error(resp.statusText);}\r\n            return resp.json()\r\n        })\r\n        .then((sketch) => {\r\n            dispatch({type: 'FETCH_CURRENT_SKETCH', \r\n            payload: {\r\n                id: sketch['data']['id'], \r\n                name: sketch['data']['attributes']['name'],\r\n                created: sketch['data']['attributes']['created'],\r\n                lastUpdated: sketch['data']['attributes']['last_updated'],\r\n                elements: sketch['included'].map((e) => ({type: e.attributes.elementable_type, properties: e.attributes.elementable}))\r\n            }\r\n            })})\r\n        .catch(error => console.log(error))\r\n    }\r\n}\r\n","export const updateSketch = (id, data) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch({ type: 'SAVING_SKETCH' });\r\n\r\n        fetch(`/api/v1/sketches/${id}`,{\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'PATCH',\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((resp) => {\r\n            if(!resp.ok){throw Error(resp.statusText);}\r\n            return resp.json()\r\n        })\r\n        .then(sketch => {\r\n            dispatch(\r\n            {\r\n                type: 'UPDATE_CURRENT_SKETCH', \r\n                payload: {\r\n                    id: sketch['data']['id'], \r\n                    name: sketch['data']['attributes']['name'], \r\n                    elements: sketch['included'].map((e) => ({type: e.attributes.elementable_type, properties: e.attributes.elementable}))\r\n                }\r\n                \r\n            })\r\n\r\n            dispatch(\r\n                {\r\n                    type: 'UPDATE_SKETCH', \r\n                    payload: {\r\n                        id: sketch['data']['id'],\r\n                        lastUpdated: sketch['data']['attributes']['last_updated'] \r\n                    }\r\n\r\n                })\r\n        }\r\n        )\r\n        .catch(error => console.log(error))\r\n    \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\n const Circle = ({ properties }) => (\r\n    <circle cx={properties.cx} cy={properties.cy} r={properties.r} stroke={properties.stroke} fill={properties.fill} strokeWidth={properties.stroke_width}/>\r\n );\r\n\r\n export default Circle","import React from 'react';\r\n\r\n const Line = ({ properties }) => (\r\n    <line x1={properties.x1} y1={properties.y1} x2={properties.x2} y2={properties.y2} stroke={properties.stroke} strokeWidth={properties.stroke_width}/>\r\n );\r\n\r\n export default Line","import React from 'react';\r\n\r\n const Rectangle = ({ properties }) => (\r\n    <rect x={properties.x} y={properties.y} width={properties.width} height={properties.height} stroke={properties.stroke} fill={properties.fill} strokeWidth={properties.stroke_width}/>\r\n );\r\n export default Rectangle","import React from 'react';\r\n\r\n const Polyline = ({ properties }) => (\r\n    <polyline points={properties.points} stroke={properties.stroke} fill=\"transparent\" strokeWidth={properties.stroke_width}/>\r\n );\r\n export default Polyline","import React from 'react';\r\nimport Circle from '../components/Circle'\r\nimport Line from '../components/Line'\r\nimport Rectangle from '../components/Rectangle'\r\nimport Polyline from '../components/Polyline';\r\n\r\n const ElementsContainer = (props) => (\r\n    <>\r\n        {props.elements.map( (elem) => {\r\n            switch(elem.type) {\r\n                case 'Circle':\r\n                  return <Circle properties={elem.properties}/>\r\n                case 'Line':\r\n                    return <Line properties={elem.properties}/>\r\n                case 'Rectangle':\r\n                  return <Rectangle properties={elem.properties}/>\r\n                case 'Polyline':\r\n                    return <Polyline properties={elem.properties}/>\r\n                default:\r\n                  return <div>Don't know what this is</div>;\r\n              }        \r\n        })}\r\n    </>\r\n );\r\n\r\n export default ElementsContainer","import React from 'react';\r\nimport ElementsContainer from './ElementsContainer'\r\n\r\nclass SketchContainer extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            elements: [],\r\n            tempElements: [],\r\n            isDrawing: false\r\n        }\r\n        this.sketchClientRect = ''\r\n        this.sketchArea = React.createRef();\r\n        this.startPoint = []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            elements: this.props.currentSketch.elements\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.currentSketch && (this.props.currentSketch !== prevProps.currentSketch)){\r\n            this.setState({\r\n                elements: this.props.currentSketch.elements\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnMouseDown = (e) => {\r\n        this.sketchClientRect = this.sketchArea.current.getBoundingClientRect() \r\n        let x1 = e.clientX - this.sketchClientRect.left\r\n        let y1 = e.clientY - this.sketchClientRect.top\r\n        this.setState({\r\n            isDrawing: true\r\n        })\r\n        this.startPoint.push(x1, y1)\r\n    } \r\n\r\n    handleOnMouseMove = (e) => {\r\n        if(this.state.isDrawing){\r\n            let x2 = e.clientX - this.sketchClientRect.left\r\n            let y2 = e.clientY - this.sketchClientRect.top\r\n            let ratio = 1000 / this.sketchClientRect.width\r\n            let ratioX = 1000 / this.sketchClientRect.width\r\n            let ratioY = 500 / this.sketchClientRect.height\r\n\r\n            switch(this.props.settings.lineType){\r\n                case 'Circle':\r\n                    this.drawCircle(x2, y2, ratioX, ratioY)\r\n                    break\r\n                case 'Line':\r\n                    this.drawLine(x2, y2, ratio)\r\n                    break\r\n                case 'Rectangle':\r\n                    this.drawRectangle(x2, y2, ratio)\r\n                    break\r\n                case 'Polyline':\r\n                    this.drawPolyline(x2, y2, ratio)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnMouseUp = (e) => {\r\n        if(this.state.isDrawing){\r\n            if(this.state.tempElements.length){\r\n                this.setState({\r\n                    isDrawing: false,\r\n                    elements: [...this.state.elements, ...this.state.tempElements],\r\n                    tempElements: []\r\n                }) \r\n            }\r\n            this.startPoint = []\r\n        }\r\n    } \r\n\r\n    drawCircle = (x2, y2, ratioX, ratioY) => {\r\n        let R = Math.pow(Math.pow(x2 - this.startPoint[0], 2) + Math.pow((y2 - this.startPoint[1]), 2), 0.5)*ratioY\r\n        this.setState({\r\n            tempElements: [{type: 'Circle', properties: {cx:(this.startPoint[0]*ratioX), cy:this.startPoint[1]*ratioY, r:R, stroke:this.getHSL(this.props.settings.lineColor), fill:this.getHSL(this.props.settings.fillColor), stroke_width:`${this.props.settings.lineWidth}`}}]\r\n        })\r\n    }\r\n\r\n    drawLine = (x2, y2, ratio) => {\r\n        this.setState({\r\n            tempElements: [{type: 'Line', properties: {x1:(this.startPoint[0]*ratio), y1:(this.startPoint[1]*ratio), x2:x2*ratio, y2:y2*ratio, stroke:this.getHSL(this.props.settings.lineColor), stroke_width:`${this.props.settings.lineWidth}`}}]\r\n        })\r\n    }\r\n\r\n    drawRectangle = (x2, y2, ratio) => {\r\n        this.setState({\r\n            tempElements: [{type: 'Rectangle', properties: {x:(Math.min(this.startPoint[0],x2)*ratio), y:(Math.min(this.startPoint[1],y2)*ratio), width:Math.abs(x2-this.startPoint[0])*ratio, height:Math.abs(y2-this.startPoint[1])*ratio, stroke:this.getHSL(this.props.settings.lineColor), fill:this.getHSL(this.props.settings.fillColor), stroke_width:`${this.props.settings.lineWidth}`}}]\r\n        })\r\n    }\r\n\r\n    drawPolyline = (x2, y2, ratio) => {\r\n        if(this.state.tempElements.length){\r\n            this.setState({\r\n                tempElements: [{type: 'Polyline', properties: {...this.state.tempElements[0].properties, points: this.state.tempElements[0].properties.points + ` ${x2*ratio} ${y2*ratio}`}}] \r\n            })\r\n        }else{\r\n            this.setState({\r\n                tempElements: [{type: 'Polyline', properties: {points:`${this.startPoint[0]*ratio} ${this.startPoint[1]*ratio} ${x2*ratio} ${y2*ratio}`, stroke:this.getHSL(this.props.settings.lineColor), stroke_width:`${this.props.settings.lineWidth}`}}]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.props.handleSave(this.props.currentSketch.id, this.state)\r\n    }\r\n\r\n    getHSL = ({h, s, l}) => `hsl(${h},${s}%,${l}%)`\r\n\r\n    render(){\r\n        const elementsToRender = () => [...this.state.elements, ...this.state.tempElements]\r\n        return(\r\n            <>\r\n                <div className='edit-sketch'>\r\n                    <svg ref={this.sketchArea} viewBox = {`0 0 1000 500`} className={\"sketch-board\"} onMouseDown={this.handleOnMouseDown} onMouseUp={this.handleOnMouseUp} onMouseMove={this.handleOnMouseMove}>\r\n                        <ElementsContainer elements={elementsToRender()} />\r\n                    </svg>\r\n                    <button onClick={this.handleSubmit}>SAVE</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SketchContainer\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n class HueSelector extends React.Component {\r\n     constructor(){\r\n        super()\r\n        this.state = {\r\n            sliderPosition: 0,\r\n            hue: 0\r\n        }\r\n        this.hueBarClientRect = ''\r\n        this.hueBar = React.createRef();\r\n     }\r\n\r\n     updateDimensions = () => {\r\n        this.hueBarClientRect = this.hueBar.current.getBoundingClientRect() \r\n        this.setState({\r\n            sliderPosition: this.getSliderPosition(this.state.hue)\r\n        })\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.hueBarClientRect = this.hueBar.current.getBoundingClientRect() \r\n        window.addEventListener('resize', this.updateDimensions);\r\n        this.setState({\r\n            hue: this.props.initHue,\r\n            sliderPosition: this.getSliderPosition(this.props.initHue)\r\n        })\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions);\r\n      }\r\n    \r\n     componentDidUpdate(prevProps, prevState){\r\n         if(this.state.sliderPosition && this.state.sliderPosition !== prevState.sliderPosition ){\r\n            this.props.handleChange({h: this.state.hue})\r\n         }\r\n     }\r\n       \r\n    handleOnMouseDown = (e) => {\r\n        this.hueBarClientRect = this.hueBar.current.getBoundingClientRect() \r\n        let y = e.clientY - this.hueBarClientRect.top\r\n        this.setState({\r\n            sliderPosition: y,\r\n            hue: this.getHue(y)\r\n        })\r\n    } \r\n\r\n    getHue = (pos) => (360 * (pos / this.hueBarClientRect.height))\r\n\r\n    getSliderPosition = (hue) => ((this.hueBarClientRect.height * hue)/360)\r\n\r\n    render(){\r\n        return (\r\n            <div ref={this.hueBar} onMouseDown={this.handleOnMouseDown} className='hue-bar' style={{background: 'linear-gradient(to bottom,hsl(0,100%,50%),hsl(60,100%,50%),hsl(120,100%,50%),hsl(180,100%,50%),hsl(240,100%,50%),hsl(300,100%,50%),hsl(360,100%,50%))'}}>\r\n                <div style={{backgroundColor: `hsl(${this.state.hue},100%,50%)`, width: '140%', paddingTop:'70%', borderRadius:'35%', border:'1px solid white', position:'relative', top:`${this.state.sliderPosition-15}px`, display:'inline-block', right:'calc(20% + 1px)'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n }\r\n\r\n export default HueSelector","import React from 'react';\r\n\r\nclass SaturationLightnessSelector extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            selectorPosition: {x:0, y:0},\r\n            saturation: 0,\r\n            lightness: 0\r\n        }\r\n        this.canvasClientRect = ''\r\n        this.canvas = React.createRef();  \r\n    }\r\n    \r\n    handleOnMouseDown = (e) => {\r\n        this.canvasClientRect = this.canvas.current.getBoundingClientRect() \r\n        let y = e.clientY - this.canvasClientRect.top - this.canvasClientRect.height\r\n        let x = e.clientX - this.canvasClientRect.left\r\n\r\n        this.setState({\r\n            selectorPosition: {x:x ,y:y},\r\n            saturation: this.getSaturation(x, y),\r\n            lightness: this.getLightness(x, y)\r\n        })\r\n    } \r\n\r\n    updateDimensions = () => {\r\n        if(this.canvas.current){\r\n            this.canvasClientRect = this.canvas.current.getBoundingClientRect() \r\n            this.setState({\r\n                selectorPosition: this.getSelectorPosition(this.state.saturation, this.state.lightness)\r\n            })\r\n        }\r\n      }\r\n\r\n    componentDidMount(){\r\n        this.fillCanvas()\r\n        window.addEventListener('resize', this.updateDimensions);\r\n       \r\n        this.canvasClientRect = this.canvas.current.getBoundingClientRect() \r\n        \r\n        this.setState({\r\n            saturation: this.props.initColor.s,\r\n            lightness: this.props.initColor.l,\r\n            selectorPosition: this.getSelectorPosition(this.props.initColor.s, this.props.initColor.l)\r\n        })  \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.props.initColor.h !== prevProps.initColor.h){\r\n            this.fillCanvas()\r\n        }\r\n\r\n        if(prevState.selectorPosition.x && this.state.selectorPosition !== prevState.selectorPosition ){\r\n            this.props.handleChange({s: this.state.saturation, l: this.state.lightness})\r\n        }\r\n    }\r\n\r\n    fillCanvas = () => {\r\n        let context = this.canvas.current.getContext(\"2d\");\r\n        this.canvas.current.style.width='100%';\r\n        this.canvas.current.style.height='100%';\r\n\r\n        let height = this.canvas.current.height\r\n        let width = this.canvas.current.width\r\n\r\n        let brightness = context.createLinearGradient(0, 0, 0, height);\r\n        brightness.addColorStop(0, \"white\");\r\n        brightness.addColorStop(1, \"black\");\r\n\r\n        let saturation = context.createLinearGradient(0, 0, width, 0);\r\n        saturation.addColorStop(0, \"hsla(\" + this.props.initColor.h + \",100%,50%,0)\");\r\n        saturation.addColorStop(1, \"hsla(\" + this.props.initColor.h + \",100%,50%,1)\");\r\n\r\n        context.fillStyle = brightness;\r\n        context.fillRect(0, 0, width, height);\r\n    \r\n        context.fillStyle = saturation;\r\n        context.globalCompositeOperation = \"multiply\";\r\n        context.fillRect(0, 0, width, height);\r\n        context.globalCompositeOperation = \"source-over\";\r\n    }\r\n\r\n    getSaturation = (x, y) => (100*this.hsvSatToHslSat(this.getHSVSat(x), this.getHSVValue(y)))\r\n\r\n    getLightness = (x, y) => (100*this.hsvVToHslL(this.getHSVSat(x), this.getHSVValue(y)))\r\n\r\n    getHSVSat = (x) => ((x / this.canvasClientRect.width))\r\n\r\n    getHSVValue = (y) => ((-y / this.canvasClientRect.height))\r\n\r\n    hsvSatToHslSat = (sat,val) => ((2-sat)*val < 1 ? sat*val/((2-sat)*val):sat*val/(2-(2-sat)*val))\r\n\r\n    hsvVToHslL = (sat, val) => ((2-sat)*val/2)\r\n\r\n    hslSatToHsvSat = (sat,light) => {\r\n        sat *= (light<.5) ? light : 1-light\r\n        return 2*sat/(light+sat)\r\n    }\r\n\r\n    hslLtoHsvV = (sat, light) =>{\r\n        sat *= (light<.5) ? light : 1-light;\r\n        return light+sat \r\n    }\r\n\r\n    getSelectorPosition = (sat, light) => {\r\n        let x = this.hslSatToHsvSat(sat/100, light/100) * this.canvasClientRect.width\r\n        let y = -this.canvasClientRect.height * this.hslLtoHsvV(sat/100, light/100)\r\n        return {x:x, y:y}\r\n    } \r\n      \r\n    render(){\r\n        return (\r\n            <div className='sat-light-select'>\r\n                <canvas   ref={this.canvas} onMouseDown={this.handleOnMouseDown} style={{verticalAlign:'top'}}></canvas>\r\n                <div style={{backgroundColor: `hsl(${this.props.initColor.h},${this.state.saturation}%,${this.state.lightness}%)`, width: '10px', height: '10px', border:'2px solid white', borderRadius: '7px', position:'relative', top:`${this.state.selectorPosition.y-5}px`, left:`${this.state.selectorPosition.x-5}px`}}></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n export default SaturationLightnessSelector","import React from 'react';\r\n\r\n const ColorIndicator = ({color}) => {\r\n    return (\r\n        <div className='color-indicator' style={{backgroundColor:`hsl(${color.h},${color.s}%,${color.l}%)`}}></div>\r\n    )\r\n }\r\n\r\n export default ColorIndicator","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HueSelector from '../components/HueSelector'\r\nimport SaturationLightnessSelector from '../components/SaturationLightnessSelector'\r\nimport ColorIndicator from '../components/ColorIndicator'\r\n\r\nconst ColorSelectorContainer = (props) => {\r\n    let lineColor = props.settings.lineColor\r\n    let fillColor = props.settings.fillColor\r\n    const handleLineColorChange = ({h = lineColor.h, s = lineColor.s, l = lineColor.l}) => {\r\n        props.updateLineColorSetting(h, s, l)\r\n    }\r\n\r\n    const handleFillColorChange = ({h = fillColor.h, s = fillColor.s, l = fillColor.l}) => {\r\n        props.updateFillColorSetting(h, s, l)\r\n    }\r\n\r\n    return(\r\n        <div className=\"color-selectors\">\r\n            {/* <h3>Line Color</h3> */}\r\n            <div className='line-color'>\r\n           \r\n                <div className='hue-select'>\r\n                    <HueSelector handleChange={handleLineColorChange} initHue={props.settings.lineColor.h}/>\r\n                </div>\r\n                \r\n                <div className='color-select'>\r\n                    <h3>Line Color</h3>\r\n                    <SaturationLightnessSelector initColor={props.settings.lineColor} handleChange={handleLineColorChange}/>\r\n                    <ColorIndicator color={props.settings.lineColor}/>\r\n                </div>\r\n            </div>\r\n            {/* <h3>Fill Color</h3> */}\r\n            <div className=\"fill-color\">\r\n                \r\n                <div className='hue-select'>\r\n                    <HueSelector handleChange={handleFillColorChange} initHue={props.settings.fillColor.h}/>\r\n                </div>\r\n                <div className='color-select'>\r\n                    <h3>Fill Color</h3>\r\n                    <SaturationLightnessSelector initColor={props.settings.fillColor} handleChange={handleFillColorChange}/>\r\n                    <ColorIndicator color={props.settings.fillColor}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      updateLineColorSetting: (h, s , l) => dispatch({ type: 'UPDATE_LINE_COLOR', payload: {h:h, s:s, l:l} }),\r\n      updateFillColorSetting: (h, s , l) => dispatch({ type: 'UPDATE_FILL_COLOR', payload: {h:h, s:s, l:l} })\r\n\r\n    }\r\n  }\r\n\r\nexport default connect(null, mapDispatchToProps)(ColorSelectorContainer)\r\n","import React from 'react';\r\n\r\n const LIneWidthSlector = (props) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.value){\r\n            props.handleUpdate(e.target.value)\r\n        }\r\n    }\r\n\r\n    const isCurrentSetting = (value) => (value === props.lineWidth)\r\n\r\n    return (\r\n        <>\r\n            <button className={isCurrentSetting('2') ? 'selected' : null} onClick={handleClick} value={2} style={{height:'50%', width: '18%', margin:'1%'}}> \r\n                <div style={{background:'black', width:'2px',height:'2px'}}></div>\r\n            </button>\r\n\r\n            <button className={isCurrentSetting('4') ? 'selected' : null} onClick={handleClick} value={4} style={{height:'50%', width: '18%', margin:'1%'}}> \r\n                <div style={{background:'black', width:'4px',height:'4px'}}></div>\r\n            </button>\r\n\r\n            <button className={isCurrentSetting('6') ? 'selected' : null} onClick={handleClick} value={6} style={{height:'50%', width: '18%', margin:'1%'}}> \r\n                <div style={{background:'black', width:'6px',height:'6px'}}></div>\r\n            </button>\r\n\r\n            <button className={isCurrentSetting('8') ? 'selected' : null} onClick={handleClick} value={8} style={{height:'50%', width: '18%', margin:'1%'}}> \r\n                <div style={{background:'black', width:'8px',height:'8px'}}></div>\r\n            </button>\r\n\r\n            <button className={isCurrentSetting('10') ? 'selected' : null} onClick={handleClick} value={10} style={{height:'50%', width: '18%', margin:'1%'}}> \r\n                <div style={{background:'black', width:'10px',height:'10px'}}></div>\r\n            </button>\r\n        </>\r\n    )\r\n }\r\n\r\n export default LIneWidthSlector","import React from 'react';\r\n\r\n const LineTypeSelector = (props) => {\r\n\r\n    const handleClick = (e) => {\r\n        console.log(e.target.value)\r\n        props.handleUpdate(e.target.value)\r\n    }\r\n\r\n    const isCurrentSetting = value => (value === props.lineType)\r\n\r\n    return (\r\n        <>\r\n            \r\n            <button className={isCurrentSetting('Circle') ? 'selected' : null} onClick={handleClick} value='Circle' style={{paddingTop:'21%', margin:'1%', background: \"url(/images/Circle.png)\", backgroundSize: 'cover'}}> </button>\r\n            <button className={isCurrentSetting('Line') ? 'selected' : null} onClick={handleClick} value='Line' style={{paddingTop:'21%', margin:'1%', background: \"url(/images/Line.png)\",  backgroundSize: 'cover'}}>  </button>\r\n            <button className={isCurrentSetting('Rectangle') ? 'selected' : null} onClick={handleClick} value='Rectangle' style={{paddingTop:'21%', margin:'1%', background: \"url(/images/Rectangle.png)\", backgroundSize: 'cover'}}> </button>\r\n            <button className={isCurrentSetting('Polyline') ? 'selected' : null} onClick={handleClick} value='Polyline' style={{paddingTop:'21%', margin:'1%', background: \"url(/images/Free.png)\", backgroundSize: 'cover'}}>  </button>\r\n        </>\r\n    )\r\n }\r\n\r\n export default LineTypeSelector","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LineWidthSelector from '../components/lineWidthSelector'\r\nimport LineTypeSelector from '../components/lineTypeSelector'\r\n\r\nconst StrokeSelectorContainer = (props) => {\r\n\r\n    const handleLineWidthUpdate = (width) => {\r\n        props.updateLineWidthSetting(width)\r\n    }\r\n\r\n    const handleLineTypeUpdate = (type) => {\r\n        props.updateLineTypeSetting(type)\r\n    }\r\n\r\n    return(\r\n        <div className=\"stroke-selectors\">\r\n            <h3>Line Width</h3>\r\n            <div className='line-width'>\r\n                <LineWidthSelector handleUpdate={handleLineWidthUpdate} lineWidth={props.settings.lineWidth}/>\r\n            </div>\r\n            <h3>Line Type</h3>\r\n            <div className=\"line-type\">\r\n                <LineTypeSelector handleUpdate={handleLineTypeUpdate} lineType={props.settings.lineType}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      updateLineWidthSetting: (width) => dispatch({ type: 'UPDATE_LINE_WIDTH', payload: width }),\r\n      updateLineTypeSetting: (type) => dispatch({ type: 'UPDATE_LINE_TYPE', payload: type })\r\n    }\r\n  }\r\n\r\nexport default connect(null, mapDispatchToProps)(StrokeSelectorContainer)\r\n","import React from 'react';\r\nimport {fetchSketch} from '../actions/fetchSketch'\r\nimport {updateSketch} from '../actions/updateSketch'\r\nimport {clearCurrentSketch} from '../actions/clearCurrentSketch'\r\nimport { connect } from 'react-redux';\r\nimport SketchContainer from '../containers/SketchContainer';\r\nimport ColorSelectorContainer from '../containers/ColorSelectorContainer'\r\nimport StrokeSelectorContainer from '../containers/StrokeSelectorContainer'\r\n\r\nimport '../styles/editView.css'\r\n\r\nclass EditView extends React.Component {\r\n\r\n    componentDidMount(){\r\n        if (this.props.match.params.sketchID !== this.props.currentSketch.id){\r\n            this.props.fetchSketch(this.props.match.params.sketchID)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearCurrentSketch()\r\n    }\r\n\r\n    handleUpdateSketch = (id, state) => {\r\n        this.props.updateSketch(id, state)\r\n    }\r\n\r\n    render(){\r\n        const loadSaveStatus = () => {\r\n            if(this.props.currentSketch.loading) {\r\n                return <h1>LOADING</h1>\r\n            }else if(this.props.currentSketch.saving) {\r\n                return <h1>SAVING</h1>\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className='edit-view'>\r\n                {loadSaveStatus()}\r\n                <div className='settings'>\r\n                    <ColorSelectorContainer settings={this.props.settings}/>\r\n                    <StrokeSelectorContainer settings={this.props.settings}/>    \r\n                </div>\r\n                <SketchContainer settings={this.props.settings} currentSketch={this.props.currentSketch} handleSave={this.handleUpdateSketch}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      fetchSketch: (id) => dispatch(fetchSketch(id)),\r\n      updateSketch: (id, elements) => dispatch(updateSketch(id, elements)),\r\n      clearCurrentSketch: () => dispatch(clearCurrentSketch())\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        settings: state.settings,\r\n        currentSketch: state.currentSketch\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditView)\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport ElementsContainer from './ElementsContainer'\r\n\r\n    const SketchPreviewContainer = (props) => (\r\n        <svg viewBox = {`0 0 1000 500`} className={\"sketch-board preview\"} >\r\n            <ElementsContainer elements={props.elements} />\r\n        </svg>\r\n    )\r\n\r\nexport default SketchPreviewContainer\r\n","import React from 'react';\r\nimport {fetchSketch} from '../actions/fetchSketch'\r\nimport {deleteSketch} from '../actions/deleteSketch'\r\nimport {clearCurrentSketch} from '../actions/clearCurrentSketch'\r\n\r\nimport {fetchSketches} from '../actions/fetchSketches'\r\n\r\nimport { connect } from 'react-redux';\r\nimport SketchPreviewContainer from '../containers/SketchPreviewContainer';\r\nimport SketchesList from '../components/SketchesList'\r\nimport NewSketchInput from '../components/NewSketchInput'\r\nimport '../styles/sketchView.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SketchView extends React.Component {\r\n\r\n    componentDidMount(){\r\n        if (this.props.match.params.sketchID !== this.props.currentSketch.id){\r\n            this.props.fetchSketch(this.props.match.params.sketchID)\r\n        }\r\n        if(!this.props.sketches.length){\r\n            this.props.fetchSketches()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.match.params.sketchID !== prevProps.match.params.sketchID){\r\n            this.props.fetchSketch(this.props.match.params.sketchID)\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.clearCurrentSketch()\r\n        this.props.deleteSketch(this.props.currentSketch.id)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='sketch-view'>\r\n                <NewSketchInput />\r\n                <div className='sketch-list'>\r\n                    <h1>Sketches</h1>\r\n                    <SketchesList sketches={[...this.props.sketches].sort((a, b) => b.lastUpdated.localeCompare(a.lastUpdated))}/>\r\n                </div>\r\n                <div className='sketch-data'>\r\n                    <h1>{this.props.currentSketch.name}</h1>\r\n                    <h6>Created: {this.props.currentSketch.created}</h6>\r\n                    <h6>Updated: {this.props.currentSketch.lastUpdated}</h6>\r\n                    <Link to={`/sketches/${this.props.currentSketch.id}/edit`}>EDIT</Link>\r\n                    <button onClick={this.handleClick}>DELETE</button>\r\n                </div>\r\n                <div className='sketch-show'>\r\n                    <SketchPreviewContainer elements={this.props.currentSketch.elements} handleSave={this.handleUpdateSketch}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        sketches: state.sketches,\r\n        currentSketch: state.currentSketch\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {fetchSketch, fetchSketches, deleteSketch, clearCurrentSketch})(SketchView)\r\n\r\n\r\n","\r\nexport const deleteSketch = (id) => {\r\n\r\n    return (dispatch) => {\r\n        fetch(`/api/v1/sketches/${id}`,{\r\n            method: 'DELETE',\r\n        })\r\n        .then((resp) => {\r\n            if(!resp.ok){throw Error(resp.statusText);}\r\n            return resp.json()\r\n        })\r\n        .then((sketch) => { \r\n\r\n            dispatch(\r\n            {\r\n                type: 'DELETE_SKETCH', \r\n                payload: sketch\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    \r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\n\nimport HeaderContainer from './containers/HeaderContainer'\n\nimport HomeView from './views/HomeView';\nimport EditView from './views/EditView';\nimport SketchView from './views/SketchView';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <HeaderContainer />\n        <Route exact path='/' render= {routerProps => <HomeView {...routerProps} />}/>\n        <Route exact path='/sketches/:sketchID' render= {routerProps => <SketchView {...routerProps} />}/>\n        <Route path='/sketches/:sketchID/edit' render= {routerProps => <EditView {...routerProps} />}/>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;","const sketchReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n      case 'FETCH_SKETCHES':\r\n        return action.payload\r\n      case 'CREATE_SKETCH':\r\n        return [...state, {id: action.payload.id, name: action.payload.name, url:`/sketches/${action.payload.id}`}]\r\n      case 'DELETE_SKETCH':\r\n        let deleteIndex = state.findIndex(sketch => sketch.id == action.payload)\r\n        return [...state.slice(0, deleteIndex), ...state.slice(deleteIndex + 1)]\r\n      case 'UPDATE_SKETCH':\r\n        let index = state.findIndex(sketch => sketch.id === action.payload.id)\r\n        return [...state.slice(0, index), {...state[index], lastUpdated: action.payload.lastUpdated}, ...state.slice(index + 1)]\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n   \r\n  export default sketchReducer;","const currentSketchReducer = (state = {id:'', name: '', elements: [], created:'', lastUpdated:'', loading: false, saving: false}, action) => {\r\n  switch(action.type) {\r\n      case 'LOADING_SKETCH':\r\n          return {...state, loading: true}\r\n      case 'SAVING_SKETCH':\r\n          return {...state, saving: true}\r\n\r\n      case 'CREATE_SKETCH':\r\n        return {...state, id: action.payload.id, name: action.payload.name, elements: action.payload.elements, loading: false, saving: false}\r\n      \r\n      case 'FETCH_CURRENT_SKETCH':\r\n      case 'CLEAR_CURRENT_SKETCH':\r\n      case 'UPDATE_CURRENT_SKETCH':\r\n          return {...state, id: action.payload.id, name: action.payload.name, elements: action.payload.elements, created:action.payload.created, lastUpdated:action.payload.lastUpdated, loading: false, saving: false}   \r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n   \r\n  export default currentSketchReducer;","const sketchSettingsReducer = (state = {lineColor:{h: 0, s: 100, l:50}, lineWidth: '4', lineType: 'Line', fillColor:{h: 0, s: 100, l:50}}, action) => {\r\n\r\n    switch(action.type) {\r\n      case 'UPDATE_LINE_COLOR':\r\n        return {...state, lineColor: {h: action.payload.h, s: action.payload.s, l: action.payload.l}}\r\n      case 'UPDATE_FILL_COLOR':\r\n          return {...state, fillColor: {h: action.payload.h, s: action.payload.s, l: action.payload.l}}\r\n      case 'UPDATE_LINE_WIDTH':\r\n          return {...state, lineWidth: action.payload}\r\n      case 'UPDATE_LINE_TYPE':\r\n          return {...state, lineType: action.payload}\r\n\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n   \r\n  export default sketchSettingsReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport sketchesReducer from './reducers/sketchesReducer.js'; \nimport currentSketchReducer from './reducers/currentSketchReducer.js'; \nimport sketchSettingsReducer from './reducers/sketchSettingsReducer.js'; \n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst rootReducer = combineReducers({sketches: sketchesReducer, currentSketch: currentSketchReducer, settings: sketchSettingsReducer})\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n \nReactDOM.render(\n  <Provider store={store}>\n    <Router >\n        <App /> \n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}